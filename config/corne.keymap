/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        EVE_LAYER {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };

        BT_CLEAR {
            bindings = <&bt BT_CLR>;
            key-positions = <0 11>;
        };

        BT_PROFILE_0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <0 5>;
        };

        BT_PROFILE_1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <0 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I               &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K               &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA           &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &to 1  &kp SPACE    &kp RET  &to 2  &kp LA(LEFT_SHIFT)
            >;
        };

        NUMPAD {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &trans  &trans  &kp PG_UP  &kp UP    &kp PG_DN    &kp N7   &kp N8  &kp N9        &kp PLUS   &kp MINUS  &kp BSPC
&kp LSHFT  &trans  &trans  &kp LEFT   &kp DOWN  &kp RIGHT    &kp N4   &kp N5  &kp N6        &kp STAR   &kp FSLH   &kp DEL
&kp LCTRL  &trans  &trans  &trans     &trans    &trans       &kp N1   &kp N2  &kp N3        &kp EQUAL  &kp COMMA  &kp ESC
                           &kp LGUI   &to 0     &kp SPACE    &kp RET  &to 2   &kp LS(RALT)
            >;
        };

        SYMBOLS {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK     &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp ESC
                             &kp LGUI  &to 0     &kp SPACE    &kp RET    &to 1      &kp LS(RALT)
            >;
        };

        EVE {
            bindings = <
&kp F7  &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp FSLH
&kp F8  &kp A  &kp S  &kp D     &kp F      &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp F9  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                      &kp LALT  &kp SPACE  &kp LCTRL    &kp EQUAL  &to 0  &kp MINUS
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
